"use strict";(self.webpackChunkwechaty_docusaurus=self.webpackChunkwechaty_docusaurus||[]).push([[8226],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return f}});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var i=n.createContext({}),u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(a),f=o,g=p["".concat(i,".").concat(f)]||p[f]||m[f]||s;return a?n.createElement(g,r(r({ref:t},c),{},{components:a})):n.createElement(g,r({ref:t},c))}));function f(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=a.length,r=new Array(s);r[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var u=2;u<s;u++)r[u]=a[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},58215:function(e,t,a){a.d(t,{Z:function(){return o}});var n=a(67294);function o(e){var t=e.children,a=e.hidden,o=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:o},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return c}});var n=a(87462),o=a(67294),s=a(72389),r=a(17704),l=a(86010),i="tabItem_LplD";function u(e){var t,a,s,u=e.lazy,c=e.block,m=e.defaultValue,p=e.values,f=e.groupId,g=e.className,d=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=p?p:d.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,r.lx)(h,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===m?m:null!=(t=null!=m?m:null==(a=d.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(s=d[0])?void 0:s.props.value;if(null!==v&&!h.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,r.UB)(),k=y.tabGroupChoices,w=y.setTabGroupChoices,T=(0,o.useState)(v),N=T[0],O=T[1],x=[],M=(0,r.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var j=k[f];null!=j&&j!==N&&h.some((function(e){return e.value===j}))&&O(j)}var P=function(e){var t=e.currentTarget,a=x.indexOf(t),n=h[a].value;n!==N&&(M(t),O(n),null!=f&&w(f,n))},Z=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=x.indexOf(e.currentTarget)+1;a=x[n]||x[0];break;case"ArrowLeft":var o=x.indexOf(e.currentTarget)-1;a=x[o]||x[x.length-1]}null==(t=a)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":c},g)},h.map((function(e){var t=e.value,a=e.label,s=e.attributes;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:function(e){return x.push(e)},onKeyDown:Z,onFocus:P,onClick:P},s,{className:(0,l.Z)("tabs__item",i,null==s?void 0:s.className,{"tabs__item--active":N===t})}),null!=a?a:t)}))),u?(0,o.cloneElement)(d.filter((function(e){return e.props.value===N}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},d.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==N})}))))}function c(e){var t=(0,s.Z)();return o.createElement(u,(0,n.Z)({key:String(t)},e))}},12593:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return u},metadata:function(){return m},toc:function(){return f}});var n=a(87462),o=a(63366),s=(a(67294),a(3905)),r=a(9877),l=a(58215),i=["components"],u={title:"Dealing with message"},c=void 0,m={unversionedId:"howto/message",id:"howto/message",title:"Dealing with message",description:"Messages",source:"@site/docs/howto/message.md",sourceDirName:"howto",slug:"/howto/message",permalink:"/docs/howto/message",editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/howto/message.md",tags:[],version:"current",lastUpdatedBy:"Vasvi Sood",lastUpdatedAt:1648642195,formattedLastUpdatedAt:"3/30/2022",frontMatter:{title:"Dealing with message"},sidebar:"docs",previous:{title:"Listen to events",permalink:"/docs/howto/event"},next:{title:"Manage contacts",permalink:"/docs/howto/contact"}},p={},f=[{value:"Messages",id:"messages",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"If you don&#39;t know where to start from",id:"if-you-dont-know-where-to-start-from",level:3},{value:"Mention",id:"mention",level:2},{value:"Self message",id:"self-message",level:2}],g={toc:f};function d(e){var t=e.components,u=(0,o.Z)(e,i);return(0,s.kt)("wrapper",(0,n.Z)({},g,u,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"messages"},"Messages"),(0,s.kt)("p",null,"Automation of messages can be done easily with wechaty onMessage function. This guide will give you a step by step overview of how to respond to self messages or messages in a room."),(0,s.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Your system must have ",(0,s.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/"},"Node.js")," installed (version >= 16)."),(0,s.kt)("li",{parentName:"ul"},"Your system must have ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/wechaty/wechaty"},"Wechaty")," (version >= 0.40)."),(0,s.kt)("li",{parentName:"ul"},"You need to be familiar with the basics of Wechaty platform. If not, follow our ",(0,s.kt)("a",{parentName:"li",href:"https://wechaty.js.org/docs/tutorials/"},"tutorials")," section."),(0,s.kt)("li",{parentName:"ul"},"You need to have at least a minimal application ready to work, follow one of our ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/wechaty/getting-started/blob/main/examples/ding-dong-bot.js"},"Example/Ding-dong-bot"),".")),(0,s.kt)("h3",{id:"if-you-dont-know-where-to-start-from"},"If you don't know where to start from"),(0,s.kt)("p",null,"See ",(0,s.kt)("a",{parentName:"p",href:"https://wechaty.js.org/docs/getting-started/quick-start/#run-ding-dong-bot"},"Running our first ding-dong bot"),"."),(0,s.kt)("p",null,"There are various message type such as ",(0,s.kt)("inlineCode",{parentName:"p"},"MessageType.Text"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"MessageType.Image"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"MessageType.Video"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"MessageType.Url"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"MessageType.Emotions"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"MessageType.Attachment"),". Some of the function are mentioned below and require a basic script that can help run the bot. The basic script starts by importing the code from ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/wechaty/getting-started/blob/main/examples/ding-dong-bot.js"},"Github/Ding-dong-bot"),".Integrate the below code, for this action to work."),(0,s.kt)("h2",{id:"mention"},"Mention"),(0,s.kt)("p",null,"Use this Mention feature to send a (@ mention) to others in the room.This function works if the message received by the onMessage function belongs to a room."),(0,s.kt)(r.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"ts",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { Message } from 'wechaty'\n\nasync function onMessage(message: Message): Promise<void> {\n  if (await message.mentionSelf()) {\n    const room = message.room()\n    if (!room) {\n      throw new Error('Should never reach here: a mention message must in a room')\n    }\n\n    console.info(message.text())\n    // \"@bot Hello\"\n    console.info(await message.mentionList())\n    // [bot]\n    console.info(await message.mentionText())\n    // \"Hello\"\n\n    const talker = room.talker()\n    await room.say`Thanks for mention me! ${talker}`\n  }\n}\n\nbot.on('message', onMessage)\n"))),(0,s.kt)(l.Z,{value:"js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import { Message }  from 'wechaty'\n\nasync function onMessage(message) {\n  if (await message.mentionSelf()) {\n    const room = message.room()\n    if (!room) {\n      throw new Error('Should never reach here: a mention message must in a room')\n    }\n\n    console.info(message.text())\n    // \"@bot Hello\"\n    console.info(await message.mentionList())\n    // [bot]\n    console.info(await message.mentionText())\n    // \"Hello\"\n\n    const talker = room.talker()\n    await room.say`Thanks for mentioning me! ${talker}`\n  }\n}\n\nbot.on('message', onMessage)\n"))),(0,s.kt)(l.Z,{value:"py",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},"from typing import List\nfrom wechaty import Wechaty, Contact\n\nclass MyBot(Wechaty):\n    async def on_ready(self, _):\n        contacts: List[Contact] = await self.Contact.find_all()\n        for contact in contacts:\n            print(f'id<{contact.contact_id}>, name<{contact.name}>, type<{contact.type()}>')\n"))),(0,s.kt)(l.Z,{value:"go",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,s.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,s.kt)(l.Z,{value:"php",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,s.kt)(l.Z,{value:"scala",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,s.kt)(l.Z,{value:"csharp",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,s.kt)(l.Z,{value:"rust",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,s.kt)("p",null,"The expected output of the JavaScript code is:\n",(0,s.kt)("img",{alt:"Message",src:a(37802).Z,width:"1101",height:"179"})),(0,s.kt)("h2",{id:"self-message"},"Self message"),(0,s.kt)("p",null,"Use this Self message feature to reply to the bot.This function works if the message received by the onMessage function has been sent by the bot to itself."),(0,s.kt)(r.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"ts",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { Message } from 'wechaty'\n\nasync function onMessage(message: Message): Promise<void> {\n  if (message.self()) {\n    const talker = message.talker()\n    const bot = message.wechaty.userSelf()\n    assert(talker === bot, 'Message is sent from bot')\n    console.info('Message is sent from bot')\n  }\n}\n\nbot.on('message', onMessage)\n"))),(0,s.kt)(l.Z,{value:"js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import { Message }  from 'wechaty'\n\nasync function onMessage (msg) {\n  log.info('StarterBot', msg.toString())\n  const contact = msg.talker() \n  console.log(contact);\n  console.log(\"message self\",msg.self());\n  if (msg.self()) {\n    const b = msg.wechaty.userSelf()\n    assert(talker === b, 'Message is sent from bot')\n    console.info('Message is sent from bot')\n  }\n\nbot.on('message', onMessage)\n"))),(0,s.kt)(l.Z,{value:"py",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},"from typing import List, Optional\nfrom wechaty import Wechaty, Contact\nfrom wechaty_puppet.schemas.contact import ContactQueryFilter\n\nclass MyBot(Wechaty):\n    async def on_ready(self, _):\n        # find by id\n        filehelper: Optional[Contact] = await self.Contact.find('filehelper')\n        if filehelper:\n            print(f'filehelper<{filehelper}>')\n        \n        # find by name\n        contacts: List[Contact] = await self.Contact.find_all(ContactQueryFilter(name='your-friend-name'))\n        print(f'total number of contacts: {len(contacts)}')\n\n        for contact in contacts:\n            print(contact)\n"))),(0,s.kt)(l.Z,{value:"go",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,s.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,s.kt)(l.Z,{value:"php",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,s.kt)(l.Z,{value:"scala",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,s.kt)(l.Z,{value:"csharp",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,s.kt)(l.Z,{value:"rust",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,s.kt)("p",null,"The expected output of the JavaScript code is:\n",(0,s.kt)("img",{alt:"Message",src:a(56072).Z,width:"1454",height:"548"})))}d.isMDXComponent=!0},56072:function(e,t,a){t.Z=a.p+"assets/images/message-7f2bd59c6a18189fbaf5315d827b0974.webp"},37802:function(e,t,a){t.Z=a.p+"assets/images/message1-fce261d8729fe6b15b637e6ecbaadca9.webp"}}]);